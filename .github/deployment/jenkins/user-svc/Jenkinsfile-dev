pipeline {
    agent any
    environment {
        DOCKER_USERNAME = credentials('DOCKER_USERNAME')
        DOCKER_PASSWORD = credentials('DOCKER_PASSWORD')
        REGISTRY_URL = 'ghcr.io'
        NAMESPACE = 'se347-dev'
        BRANCH_NAME = 'dev'
        TAG = "${BRANCH_NAME}-${GITHUB_SHA}"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: "${BRANCH_NAME}"]],
                    userRemoteConfigs: [[url: 'https://github.com/ngodat0103/se347.git']]
                )
            }
        }
        stage('test') {
            steps {
                sh "echo 'Testing'"
                sh 'sleep 2'
            }
        }
        stage('Build') {
            steps {
                dir('backend/user-svc') {
                    sh 'echo "TAG=$TAG" > .env'
                    sh 'docker compose --profile all build'
                    sh 'docker login $REGISTRY_URL -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'docker compose --profile all push'
                    sh 'docker logout $REGISTRY_URL'
                }
            }
        }
        stage('Deploying to the dev cluster') {
            agent {
                node {
                    label 'k8s-dev'
                }
            }
            steps {
                checkout scmGit(
                    branches: [[name: 'datnvm/jenkins-config']],
                    userRemoteConfigs: [[url: 'https://github.com/ngodat0103/se347.git']]
                )
                dir(".github/deployment/kubernetes/helm/sub-charts/user-svc") {
                    withKubeConfig([credentialsId: 'KUBE_CONFIG_DEV']) {
                        sh 'helm upgrade --install --namespace=$NAMESPACE --create-namespace --set image.tag=$TAG --values=values.yaml user-svc .'
                    }
                } 
            }
        }
    }
}
