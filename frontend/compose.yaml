services:
  kong-dev:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    profiles: [ "infra-dev"]
    extra_hosts:
      - "se347-backend:172.21.0.1"
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:80}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:9001}"
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:9002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yaml"
    networks: [ dev ]
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:80:80/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "9001:9001/tcp" # Admin API
      - "9444:9444/tcp" # Admin API over HTTPS
      - "9002:9002/tcp" # Admin GUI
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./kong.yaml:/etc/kong/kong.yaml:ro
#      - ./kong.conf.default:/etc/kong/kong.conf.default:ro
    security_opt:
      - no-new-privileges
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    profiles: [ "all","dev" ]
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:80}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:9001}"
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:9002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yaml"
    networks: [ dev ]
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:80:80/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "9001:9001/tcp" # Admin API
      - "9444:9444/tcp" # Admin API over HTTPS
      - "9002:9002/tcp" # Admin GUI
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./kong.yaml:/etc/kong/kong.yaml:ro
    #      - ./kong.conf.default:/etc/kong/kong.conf.default:ro
    security_opt:
      - no-new-privileges
  mongodb:
    profiles: [ "infra-dev","all","dev" ]
    image: mongodb/mongodb-community-server:7.0.2-ubi9
    hostname: mongodb
    networks: [ dev ]
    ports:
      - "27017:27017"
  se347-backend:
    profiles: [ "all","dev"]
    image: "ghcr.io/ngodat0103/se347-backend:dev-latest"
    networks: [ dev ]
#    depends_on:
#      - mongodb
    ports:
      - "5000:5000"
    environment:
      SPRING_PROFILES_ACTIVE: "local-dev"
      SPRING_DATA_MONGODB_DATABASE: "se347-db"
  se347-frontend:
      profiles: [ "all","app"]
      image: ghcr.io/ngodat0103/se347-frontend:dev-latest
      build:
        context: .
        dockerfile: Dockerfile
        labels:
            org.opencontainers.image.source: https://github.com/ngodat0103/SE347.E12-frontend.git
            org.opencontainers.image.description: "This is a frontend service for SE347 course"
            org.opencontainers.image.license: MIT
      environment:
          NODE_ENV: production
      ports:
          - 4200:4200
volumes:
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
networks:
  dev:
    name: dev
    driver: bridge
    ipam:
      config:
        - subnet: "172.21.0.0/16"
          gateway: "172.21.0.1"